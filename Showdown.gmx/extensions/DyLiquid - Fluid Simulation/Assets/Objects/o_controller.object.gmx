<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>application_surface_enable(0);
display_reset(8, 0);
draw_set_font(f_std);

x1 = 0;
x2 = 0;
y1 = 0;
y2 = 0;
text = 1;
type = 0;
particles = 1;

col[0] = make_colour_rgb(44, 62, 80);
col[1] = make_colour_rgb(192, 57, 43);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_check_button_pressed(mb_left)) {
  instance_create(mouse_x, mouse_y, o_rock);
}

if (mouse_check_button_pressed(mb_middle)) {
  instance_create(mouse_x, mouse_y, o_ducky);
}

if (mouse_check_button_pressed(mb_right)) {
  with(o_liquid_parent) instance_destroy();
  with(o_rock) instance_destroy();
  with(o_ducky) instance_destroy();
  x1 = mouse_x;
  y1 = mouse_y;
}

if (mouse_check_button(mb_right)) {
  x2 = mouse_x;
  y2 = mouse_y;
}

if (mouse_check_button_released(mb_right)) {
  if (type = 0) {
    with(instance_create(min(x1, x2), min(y1, y2), o_water)) {
      dyliquid_set_bounds(min(other.x1, other.x2), min(other.y1, other.y2), max(other.x1, other.x2), max(other.y1, other.y2));
    }
  } else {
    with(instance_create(min(x1, x2), min(y1, y2), o_lava)) {
      dyliquid_set_bounds(min(other.x1, other.x2), min(other.y1, other.y2), max(other.x1, other.x2), max(other.y1, other.y2));
    }
  }
  x1 = 0;
  y1 = 0;
  x2 = 0;
  y2 = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change properties

if (text = 1 and instance_exists(o_liquid_parent)) {
  var str;
  str = "FPS: " + string(round(fps)) + ".#";
  str+= "Tension (Q/A): " + string_format(o_liquid_parent.dy_tension, 1, 5) + ".#";
  str+= "Spread (W/S): " + string_format(o_liquid_parent.dy_spread, 1, 5) + ".#";
  str+= "Dampening (E/D): " + string_format(o_liquid_parent.dy_dampening, 1, 5) + ".#";
  str+= "Quality (R/F): " + string(o_liquid_parent.dy_colomns_count) + " springs.#";
  str+= "Smoothing (T/G): " + string(o_liquid_parent.dy_smoothing) + " passes.#";
  str+= "Auto-Waves (Y/H): " + string(o_liquid_parent.dy_wave) + ".#";
  str+= "Auto-Waves Speed (U/J): " + string(o_liquid_parent.dy_speed) + ".#";
  str+= "Click somewhere LMB to drop rocks or use RMB to draw water rectangle.#";
  str+= "Press Enter to switch text drawing.#";
  str+= "Press Shift to switch water/lava.#";
  str+= "Press Ctrl to switch particles.#";
  str+= "Press Backspace to reset.";
  
  draw_set_color(col[0]);
  draw_text(5, 5, str);
  
  with(o_liquid_parent) {
    switch(keyboard_key) {
      case (ord('Q')): {      
        dyliquid_set_tension(dy_tension / 0.99);
        break;
      }
      case (ord('A')): {
        dyliquid_set_tension(dy_tension * 0.99);
        break;
      }
      case (ord('W')): {
        dyliquid_set_spread(dy_spread - 0.005);
        break;
      }
      case (ord('S')): {
        dyliquid_set_spread(dy_spread + 0.005);
        break;
      }
      case (ord('E')): {
        dyliquid_set_dampening(dy_dampening / 0.99);
        break;
      }
      case (ord('D')): {
        dyliquid_set_dampening(dy_dampening * 0.99);
        break;
      }
      case (ord('R')): {
        dyliquid_set_quality(min(200, dy_colomns_count + 1), dy_smoothing);
        break;
      }
      case (ord('F')): {
        dyliquid_set_quality(max(50, dy_colomns_count - 1), dy_smoothing);
        break;
      }
      case (ord('Y')): {
        dyliquid_set_wave(dy_wave + 0.1);
        break;
      }
      case (ord('H')): {
        dyliquid_set_wave(dy_wave - 0.1);
        break;
      }
      case (ord('U')): {
        dyliquid_set_speed(dy_speed + 0.1);
        break;
      }
      case (ord('J')): {
        dyliquid_set_speed(dy_speed - 0.1);
        break;
      }
    }
  
    if (keyboard_check_released(ord('T'))) {
      dyliquid_set_quality(dy_colomns_count, min(16, dy_smoothing + 1));
    }
    
    if (keyboard_check_released(ord('G'))) {
      dyliquid_set_quality(dy_colomns_count, max(1, dy_smoothing - 1));
    }
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(col[1]);
draw_set_alpha(0.5);
draw_rectangle(x1, y1, x2, y2, 0);
draw_set_alpha(1);
draw_rectangle(x1, y1, x2, y2, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>particles = !particles;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type = !type;

with (o_liquid_parent) {
  other.xx1 = dy_x[0];
  other.yy1 = dy_y[0];
  other.xx2 = dy_x[1];
  other.yy2 = dy_y[1];
  instance_destroy();
}

if (type = 0) {
  with(instance_create(xx1, yy1, o_water)) {
    dyliquid_set_bounds(other.xx1, other.yy1, other.xx2, other.yy2);
  }
} else {
  with(instance_create(xx1, yy1, o_lava)) {
    dyliquid_set_bounds(other.xx1, other.yy1, other.xx2, other.yy2);
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text = !text;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(o_liquid_parent) {
  dyliquid_set_tension(0.025);
  dyliquid_set_dampening(0.025);
  dyliquid_set_spread(0.35);  
  dyliquid_set_quality(100, 2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
